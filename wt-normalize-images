#!/usr/bin/perl

use Switch;
use File::Copy;
use File::Find;
use Cwd;
use Image::Size;
use Getopt::Long;
use String::CRC32;
use Term::ANSIColor;

my $tmp = "/tmp/wt";
my $dir = getcwd;
my $savings = $opts = $resizes = 0;
my $pixels = "2M";
my $verbose;
$result = GetOptions ("pixels=s" => \$pixels, 
			   	      "verbose"  => \$verbose); 

parse_pixels($pixels);
my $mps = $pixels / 1024 / 1024;

print "Fit to: " . sprintf("%.2f", $mps) . " Megapixels\n";
print "Current working directory: $dir\n";

unless(-d $tmp){
	print "Creating temporary directory ... " if $verbose;
    mkdir $tmp or die "Tmp directory was failed to create\n";
	print "Done\n" if $verbose;
}

find(\&jpg_wanted, $dir);

sub parse_pixels
{
	my ($hr) =  @_;
	if ( $hr =~ m/(\d+)(m|k)?/i )
	{
		switch (lc $2)  {
			case "m" { $pixels = $1 * 1024 * 1024 }
			case "k" { $pixels = $1 * 1024 }
			else { $pixels = $1 }
		}
	}
	else
	{
		print "Pixel number error\n";
		exit(1);
	}
}

sub jpg_wanted
{
	/\.jpg$/ && optimize($_);
}

sub optimize 
{
	my $workfile = $orig = $_;
	my $os = -s $orig;
	my ($width, $height) = imgsize($workfile);	
	print "processing $workfile ... " if $verbose;   

	if ( $width * $height > $pixels )
	{
		my $tmpfile = crc32($workfile).'.jpg';
		$resize = `convert $workfile -resize $pixels@ $tmp/$tmpfile`;
		
		print colored ("[resized]",'yellow on_black') if $verbose;
		$workfile = "$tmp/$tmpfile";
		$resizes++;
	}

    $opt = `jpegtran -copy none -optimize -progressive $workfile > $workfile.opt`;
	$opts++;
	print colored("[optimized] ",'blue on_black') if $verbose;

	if ( $opt == 0)
	{
		move($orig, "$orig.bak");
		move($workfile, $orig);

		my $ns = -s $orig;
		my $save = ($os - $ns) / 1024;

		if ( $verbose )
		{
			print colored("[done]", 'black on_green');
			print colored(" saved: " . sprintf("%.2f", $save) . "kByte", 'cyan on_black' );
			print "\n";
		}

		$savings = $save;
	}

	print uncolor ('01;31'), "\n";
	return;
}

print "Finished\n";
print "---------------------------\n";
print "Image processed: $resizes\n";
print "Image optimised: $opts\n";
print "Saved storage: " . sprintf("%.2f", $savings) . "kByte";

0
